#
#  Provide DOS compilation environment for VGAP stuff
#
#  Set up common tools:
#   /work
#     /tc20
#     /bp7
#     /djgpp
#     /vsmake           (checkout and compile)
#     /planets          (checkout)
#       /lib            (checkout and compile)
#     /devel/units      (checkout and compile)
#     /devel/ext
#       /tputuner       (checkout and compile)
#       /bdiff          (checkout and compile)
#
#  For now this does not try to atomically build the custom tools as separate bob
#  packages; our main product is what we build with the tools.
#

inherit:
  - copy
  - dos

#
#  Checkout: obtain all necessary files
#
checkoutVars: [CVSROOT, CVSROOT2, REPO_ROOT, DOS_PLANETS_REV, DOS_DEVEL_REV]
checkoutScript: |
  link83() {
    for i in "$@"; do
      case "$i" in
        *.*)
          base=${i%.*}
          base=${base:0:8}
          suf=${i##*.}
          suf=${suf:0:3}
          nfn=$base.$suf
          ;;
        *)
          nfn=$i
          ;;
      esac
      if test "$nfn" != "$i"; then
        ln -sf "$i" "$nfn"
      fi
    done
  }

  # pkzip
  test -f work/tools/pkzip.exe || {
    mkdir -p work/tools
    cp "${REPO_ROOT}/dos/pkzip.exe" work/tools/
  }

  # bp7
  test -d work/bp7 || {
    mkdir -p work/bp7
    unzip "${REPO_ROOT}/dos/bp7.zip" -d work/bp7
  }

  # tc20
  test -d work/tc20 || {
    mkdir -p work/tc20
    unzip "${REPO_ROOT}/dos/tc20.zip" -d work/tc20
  }

  # djgpp
  test -d work/djgpp || {
    mkdir -p work/djgpp
    unzip "${REPO_ROOT}/dos/djgpp.zip" -d work/djgpp
  }

  # vsmake
  d=work/vsmake
  test -d $d || (
    mkdir -p $d
    cvs -d "$CVSROOT" -q co -d $d vsmake
  )
  cvs -q up -dP $d

  # planets repo
  d=work/planets
  test -d $d || (
    mkdir -p work/planets
    cvs -q -d "$CVSROOT2" co -d $d -r "${DOS_PLANETS_REV:-HEAD}" planets
  )
  cvs -q up -dP $d

  # devel/units repo
  # We only need devel/units, but that refers to files in devel.
  # (This is also the reason why I don't use bob checkout here.)
  d=work/devel/units
  test -d $d || (
    mkdir -p work/devel/units
    cvs -q -d "$CVSROOT2" co -l -d work/devel       -r "${DOS_DEVEL_REV:-HEAD}" devel
    cvs -q -d "$CVSROOT2" co    -d work/devel/units -r "${DOS_DEVEL_REV:-HEAD}" devel/units
  )
  cvs -q up -dP work/devel/units

  # tputuner repo
  # This repo uses names longer than 8.3 and assumes they are truncated by the checkout process
  # (which is what would happen if it were unpacked from a zip file within emulation.)
  d=work/devel/ext/tputuner
  test -d $d || (
    mkdir -p $d
    cd $d
    cvs -q co -d . tputuner
    link83 *
  )
  cvs -q up -dP $d

  # bdiff repo
  d=work/devel/ext/bdiff
  test -d $d || (
    mkdir -p $d
    cvs -q co -d $d bdiff
  )

  mkdir -p work/planets/cc/zips

#
#  build: build essential tools
#
buildScript: |
  shallowCopy "$1" .

  # Extra Makefile for vsmake (Borland make does not support command-line override)
  d=work/vsmake
  sed '
     s|TCDIR = .*|TCDIR = ..\\tc20|
     s|CFLAGS = .*|CFLAGS = -O -I$(TCDIR)\\include -L$(TCDIR)\lib|
  ' < $d/Makefile.tc > $d/Makefile.tc2

  # Environment
  # Tell DJGPP that we only have 8.3 file names
  dos_setenv lfn n

  # Paths
  dos_setenv base '\work'
  dos_setenv path '%base%\bp7\bin;%base%\djgpp\bin;%base%\tools;%base%\vsmake;%path%'
  dos_setenv djgpp '%base%\djgpp\djgpp.env'

  cmd=(
    # build vsmake
    #   requires Borland make (from BP7)
    #     Borland make expects '-ffile', not '-f file'
    #   requires TC20
    #     files must be in DOS format or TC20 does not understand them
    'cd %base%\vsmake'
    'utod *.c *.h Makefile*'
    '..\bp7\bin\make -fmakefile.tc2'

    # build lib
    #   requires vsmake
    #   requires bp7
    #   requires tc20 (for rm.exe)
    'vsmake -C %base%/planets/lib'

    # build devel\units
    #   requires vsmake
    #   requires bp7
    'vsmake -C %base%/devel/units'

    # build devel\ext\tputuner
    #   requires djgpp
    'gmake -C %base%/devel/ext/tputuner'

    # build devel\ext\bdiff
    #   requires djgpp
    'gmake -C %base%/devel/ext/bdiff'
  )
  dos_run "${cmd[@]}"

packageScript: |
  shallowCopy "$1" .
