# PCC2
#
# Note that this package is configured for /usr/local, not /opt/pcc2,
# because most of the binary packages we released so far go there.
inherit:
  - copy
  - make

depends:
  - libs::cxxtest

checkoutVars: [CVSROOT]
checkoutSCM:
  - scm: cvs
    cvsroot: ${CVSROOT}
    module: cpluslib
    dir: cpluslib
    rev: ${CPLUSLIB_REV:-HEAD}
  - scm: cvs
    cvsroot: ${CVSROOT}
    module: pcc-v2
    dir: pcc-v2
    rev: ${PCC2_REV:-HEAD}

multiPackage:
  # Binary
  bin:
    depends:
      - planets::pdk-bin
    buildVars: [RUN]
    buildScript: &build |
      # Fetch and set up source
      deepCopy "$1" .
      cd pcc-v2
      ln -sf ../cpluslib

      # Build
      ./configure --with-pdk=${BOB_DEP_PATHS[planets::pdk-bin]}/opt/pdk/legacy
      doMake
      doMake CXXTESTDIR=${BOB_DEP_PATHS[libs::cxxtest]} testsuite
      ${RUN} ./testsuite

    packageScript: |
      make -C "$1"/pcc-v2 prefix="$PWD/usr/local" INSTLOG="$PWD/install.log" INSTALL_FLAGS=-O install
      rm -f install.log

  bin-nogui:
    depends:
      - planets::pdk-bin
    buildVars: [RUN]
    buildScript: |
      # Fetch and set up source
      deepCopy "$1" .
      cd pcc-v2
      ln -sf ../cpluslib

      # Build
      ./configure --with-pdk=${BOB_DEP_PATHS[planets::pdk-bin]}/opt/pdk/legacy --with-sdl-prefix=/gibts/ned
      doMake

    packageScript: |
      make -C "$1"/pcc-v2 prefix="$PWD/usr/local" INSTLOG="$PWD/install.log" INSTALL_FLAGS=-O install
      rm -f install.log

  # Package
  pkg:
    depends:
      - planets::pdk-bin
      - name: tools::statfake-host
        use: [tools]
    buildVars: [RUN]
    buildScript: *build
    packageTools:
      - statfake
    packageScript: |
      # Original code:
      #    make -C "$1"/pcc-v2 prefix="$PWD" deb
      # Since 'make deb' only works in-place, we reproduce the package building here:
      make -C "$1"/pcc-v2 prefix="$PWD/packaging/usr/local" INSTLOG="$PWD/install.log" INSTALL_FLAGS=-O install
      perl "$1"/pcc-v2/scripts/install.pl -O -d -m 644 -R"$1/pcc-v2/debian" "$PWD/packaging/DEBIAN"
      statfake dpkg-deb -b packaging .
      rm -rf install.log packaging

  # Windows package
  # This basically reproduces the build_dist_windows script, but with updated dependencies
  win-pkg:
    depends:
      - libs::sdl-bin
      - libs::sdlimage-bin
      - libs::zlib-bin
      - tools::nsis-win32
    buildVars: [AR, CC, CXX, RANLIB, STRIP, SYSROOT]
    buildScript: |
      # Paths
      SDL=${BOB_DEP_PATHS[libs::sdl-bin]}/opt/sdl
      SDLIMAGE=${BOB_DEP_PATHS[libs::sdlimage-bin]}/opt/sdlimage
      ZLIB=${BOB_DEP_PATHS[libs::zlib-bin]}/opt/zlib
      NSIS=${BOB_DEP_PATHS[tools::nsis-win32]}

      # Fetch and set up source
      deepCopy "$1" .
      cd pcc-v2
      ln -sf ../cpluslib

      # Configure
      cp arch/win32-mingw/acdefs.h .

      cat >acdefs.mak <<EOF
      AC_CXXFLAGS = -DWIN32 -O -I$SDL/include/SDL -I$SDLIMAGE/include/SDL -I$ZLIB/include -Wno-deprecated-declarations
      AC_LIBS = $SDL/lib/libSDL.dll.a $SDLIMAGE/lib/libSDL_image.dll.a $ZLIB/lib/libz.dll -luser32 -lkernel32 -lgdi32
      AC_LDFLAGS =

      # Programs
      AR = $AR
      CC = $CC
      CXX = $CXX
      RANLIB = $RANLIB
      STRIP = $STRIP
      PERL = perl
      HAVE_SDL = yes
      HAVE_PDK = no

      # This assumes a Unix-style 'rm' program is present:
      RM = rm -f
      EOF

      echo '#include "arch/win32-bcc55/platform.h"' > arch/platform.h

      # Build
      doMake -f Makefile.min

      # Determine path for potential DLLs.
      # NSIS's directory structure confuses prepare3.pl, so filter that out.
      DLL_PATH="${SYSROOT}"
      for i in "${!BOB_ALL_PATHS[@]}"; do
        case "$i" in
          tools::nsis*)
            ;;
          *)
            DLL_PATH="${DLL_PATH} ${BOB_ALL_PATHS[$i]}"
            ;;
        esac
      done
      export DLL_PATH

      # Build installer
      cd installer
      perl prepare3.pl script >PCC2-files.nsh
      perl convert.pl PCC2-Installer.nsi PCC2-Installer-utf8.nsi
      NSISDIR=$NSIS/share/nsis $NSIS/bin/makensis PCC2-Installer-utf8.nsi

    packageScript: |
      cp $1/pcc-v2/installer/PCC2-Installer.exe .
      cp $1/pcc-v2/installer/filelist.txt .
